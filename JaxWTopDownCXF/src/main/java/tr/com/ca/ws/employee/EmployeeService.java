package tr.com.ca.ws.employee;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.3.4
 * 2020-01-12T21:24:54.425+03:00
 * Generated source version: 3.3.4
 *
 */
@WebService(targetNamespace = "http://employee.ws.ca.com.tr/", name = "EmployeeService")
@XmlSeeAlso({ObjectFactory.class})
public interface EmployeeService {

    @WebMethod
    @Action(input = "http://employee.ws.ca.com.tr/EmployeeService/updateEmployeeRequest", output = "http://employee.ws.ca.com.tr/EmployeeService/updateEmployeeResponse", fault = {@FaultAction(className = EmployeeNotFoundException_Exception.class, value = "http://employee.ws.ca.com.tr/EmployeeService/updateEmployee/Fault/EmployeeNotFoundException")})
    @RequestWrapper(localName = "updateEmployee", targetNamespace = "http://employee.ws.ca.com.tr/", className = "tr.com.ca.ws.employee.UpdateEmployee")
    @ResponseWrapper(localName = "updateEmployeeResponse", targetNamespace = "http://employee.ws.ca.com.tr/", className = "tr.com.ca.ws.employee.UpdateEmployeeResponse")
    @WebResult(name = "result", targetNamespace = "")
    public boolean updateEmployee(

        @WebParam(name = "id", targetNamespace = "")
        int ıd,
        @WebParam(name = "name", targetNamespace = "")
        java.lang.String name,
        @WebParam(name = "status", targetNamespace = "")
        tr.com.ca.ws.employee.Status status
    ) throws EmployeeNotFoundException_Exception;

    @WebMethod
    @Action(input = "http://employee.ws.ca.com.tr/EmployeeService/getEmployeesRequest", output = "http://employee.ws.ca.com.tr/EmployeeService/getEmployeesResponse")
    @RequestWrapper(localName = "getEmployees", targetNamespace = "http://employee.ws.ca.com.tr/", className = "tr.com.ca.ws.employee.GetEmployees")
    @ResponseWrapper(localName = "getEmployeesResponse", targetNamespace = "http://employee.ws.ca.com.tr/", className = "tr.com.ca.ws.employee.GetEmployeesResponse")
    @WebResult(name = "employee", targetNamespace = "")
    public java.util.List<tr.com.ca.ws.employee.Employee> getEmployees()
;

    @WebMethod
    @Action(input = "http://employee.ws.ca.com.tr/EmployeeService/getEmployeeRequest", output = "http://employee.ws.ca.com.tr/EmployeeService/getEmployeeResponse", fault = {@FaultAction(className = EmployeeNotFoundException_Exception.class, value = "http://employee.ws.ca.com.tr/EmployeeService/getEmployee/Fault/EmployeeNotFoundException")})
    @RequestWrapper(localName = "getEmployee", targetNamespace = "http://employee.ws.ca.com.tr/", className = "tr.com.ca.ws.employee.GetEmployee")
    @ResponseWrapper(localName = "getEmployeeResponse", targetNamespace = "http://employee.ws.ca.com.tr/", className = "tr.com.ca.ws.employee.GetEmployeeResponse")
    @WebResult(name = "employee", targetNamespace = "")
    public tr.com.ca.ws.employee.Employee getEmployee(

        @WebParam(name = "id", targetNamespace = "")
        int ıd
    ) throws EmployeeNotFoundException_Exception;

    @WebMethod
    @Action(input = "http://employee.ws.ca.com.tr/EmployeeService/deleteEmployeeRequest", output = "http://employee.ws.ca.com.tr/EmployeeService/deleteEmployeeResponse", fault = {@FaultAction(className = EmployeeNotFoundException_Exception.class, value = "http://employee.ws.ca.com.tr/EmployeeService/deleteEmployee/Fault/EmployeeNotFoundException")})
    @RequestWrapper(localName = "deleteEmployee", targetNamespace = "http://employee.ws.ca.com.tr/", className = "tr.com.ca.ws.employee.DeleteEmployee")
    @ResponseWrapper(localName = "deleteEmployeeResponse", targetNamespace = "http://employee.ws.ca.com.tr/", className = "tr.com.ca.ws.employee.DeleteEmployeeResponse")
    @WebResult(name = "result", targetNamespace = "")
    public boolean deleteEmployee(

        @WebParam(name = "id", targetNamespace = "")
        int ıd
    ) throws EmployeeNotFoundException_Exception;

    @WebMethod
    @Action(input = "http://employee.ws.ca.com.tr/EmployeeService/findEmployeesRequest", output = "http://employee.ws.ca.com.tr/EmployeeService/findEmployeesResponse", fault = {@FaultAction(className = SOAPException_Exception.class, value = "http://employee.ws.ca.com.tr/EmployeeService/findEmployees/Fault/SOAPException")})
    @RequestWrapper(localName = "findEmployees", targetNamespace = "http://employee.ws.ca.com.tr/", className = "tr.com.ca.ws.employee.FindEmployees")
    @ResponseWrapper(localName = "findEmployeesResponse", targetNamespace = "http://employee.ws.ca.com.tr/", className = "tr.com.ca.ws.employee.FindEmployeesResponse")
    @WebResult(name = "employee", targetNamespace = "")
    public java.util.List<tr.com.ca.ws.employee.Employee> findEmployees(

        @WebParam(name = "employeeRequest", targetNamespace = "")
        tr.com.ca.ws.employee.EmployeeRequest employeeRequest
    ) throws SOAPException_Exception;

    @WebMethod
    @Action(input = "http://employee.ws.ca.com.tr/EmployeeService/addEmployeeRequest", output = "http://employee.ws.ca.com.tr/EmployeeService/addEmployeeResponse", fault = {@FaultAction(className = EmployeeAlreadyExistsException_Exception.class, value = "http://employee.ws.ca.com.tr/EmployeeService/addEmployee/Fault/EmployeeAlreadyExistsException")})
    @RequestWrapper(localName = "addEmployee", targetNamespace = "http://employee.ws.ca.com.tr/", className = "tr.com.ca.ws.employee.AddEmployee")
    @ResponseWrapper(localName = "addEmployeeResponse", targetNamespace = "http://employee.ws.ca.com.tr/", className = "tr.com.ca.ws.employee.AddEmployeeResponse")
    @WebResult(name = "result", targetNamespace = "")
    public boolean addEmployee(

        @WebParam(name = "name", targetNamespace = "")
        java.lang.String name
    ) throws EmployeeAlreadyExistsException_Exception;
}
