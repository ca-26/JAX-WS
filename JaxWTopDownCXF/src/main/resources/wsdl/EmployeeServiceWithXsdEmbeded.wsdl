<?xml version='1.0' encoding='UTF-8'?><!-- Published by JAX-WS RI (http://jax-ws.java.net). RI's version is JAX-WS RI 2.3.0 svn-revision#3528ea595bd29309f69172d231bbce272d21035c. --><!-- Generated by JAX-WS RI (http://javaee.github.io/metro-jax-ws). RI's version is JAX-WS RI 2.3.0 svn-revision#3528ea595bd29309f69172d231bbce272d21035c. --><definitions xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsp1_2="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://employee.ws.ca.com.tr/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/" targetNamespace="http://employee.ws.ca.com.tr/" name="EmployeeService">
<types>
<!--
<xsd:schema>
<xsd:import namespace="http://employee.ws.ca.com.tr/" schemaLocation="http://localhost:8080/JaxWsBottomUp/EmployeeService?xsd=1"/>
</xsd:schema>
-->
<xs:schema xmlns:tns="http://employee.ws.ca.com.tr/" xmlns:xs="http://www.w3.org/2001/XMLSchema" version="1.0" targetNamespace="http://employee.ws.ca.com.tr/">

<xs:element name="EmployeeAlreadyExists" type="tns:EmployeeAlreadyExistsException"/>

<xs:element name="EmployeeNotFound" type="tns:EmployeeNotFoundException"/>

<xs:element name="EmployeeRequest" type="tns:employeeRequest"/>

<xs:element name="SOAPException" type="tns:SOAPException"/>

<xs:element name="addEmployee" type="tns:addEmployee"/>

<xs:element name="addEmployeeResponse" type="tns:addEmployeeResponse"/>

<xs:element name="deleteEmployee" type="tns:deleteEmployee"/>

<xs:element name="deleteEmployeeResponse" type="tns:deleteEmployeeResponse"/>

<xs:element name="employee" type="tns:Employee"/>

<xs:element name="findEmployees" type="tns:findEmployees"/>

<xs:element name="findEmployeesResponse" type="tns:findEmployeesResponse"/>

<xs:element name="getEmployee" type="tns:getEmployee"/>

<xs:element name="getEmployeeResponse" type="tns:getEmployeeResponse"/>

<xs:element name="getEmployees" type="tns:getEmployees"/>

<xs:element name="getEmployeesResponse" type="tns:getEmployeesResponse"/>

<xs:element name="updateEmployee" type="tns:updateEmployee"/>

<xs:element name="updateEmployeeResponse" type="tns:updateEmployeeResponse"/>

<xs:complexType name="Employee">
<xs:sequence>
<xs:element name="id" type="xs:int"/>
<xs:element name="name" type="xs:string"/>
<xs:element name="status" type="tns:status"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="updateEmployee">
<xs:sequence>
<xs:element name="id" type="xs:int"/>
<xs:element name="name" type="xs:string"/>
<xs:element name="status" type="tns:status"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="updateEmployeeResponse">
<xs:sequence>
<xs:element name="result" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="EmployeeNotFoundException">
<xs:sequence>
<xs:element name="message" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getEmployees">
<xs:sequence/>
</xs:complexType>

<xs:complexType name="getEmployeesResponse">
<xs:sequence>
<xs:element name="employee" type="tns:Employee" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getEmployee">
<xs:sequence>
<xs:element name="id" type="xs:int"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getEmployeeResponse">
<xs:sequence>
<xs:element name="employee" type="tns:Employee" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="findEmployees">
<xs:sequence>
<xs:element name="employeeRequest" type="tns:employeeRequest"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="employeeRequest">
<xs:sequence>
<xs:element name="id" type="xs:int" nillable="true" minOccurs="0"/>
<xs:element name="name" type="xs:string"/>
<xs:element name="status" type="tns:status" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="findEmployeesResponse">
<xs:sequence>
<xs:element name="employee" type="tns:Employee" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="SOAPException">
<xs:sequence>
<xs:element name="message" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="addEmployee">
<xs:sequence>
<xs:element name="name" type="xs:string"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="addEmployeeResponse">
<xs:sequence>
<xs:element name="result" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="EmployeeAlreadyExistsException">
<xs:sequence>
<xs:element name="message" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="deleteEmployee">
<xs:sequence>
<xs:element name="id" type="xs:int"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="deleteEmployeeResponse">
<xs:sequence>
<xs:element name="result" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>

<xs:simpleType name="status">
<xs:restriction base="xs:string">
<xs:enumeration value="ACTIVE"/>
<xs:enumeration value="STANDBY"/>
<xs:enumeration value="EXIT"/>
</xs:restriction>
</xs:simpleType>
</xs:schema>
</types>
<message name="getEmployee">
<part name="parameters" element="tns:getEmployee"/>
</message>
<message name="getEmployeeResponse">
<part name="parameters" element="tns:getEmployeeResponse"/>
</message>
<message name="EmployeeNotFoundException">
<part name="fault" element="tns:EmployeeNotFound"/>
</message>
<message name="getEmployees">
<part name="parameters" element="tns:getEmployees"/>
</message>
<message name="getEmployeesResponse">
<part name="parameters" element="tns:getEmployeesResponse"/>
</message>
<message name="addEmployee">
<part name="parameters" element="tns:addEmployee"/>
</message>
<message name="addEmployeeResponse">
<part name="parameters" element="tns:addEmployeeResponse"/>
</message>
<message name="EmployeeAlreadyExistsException">
<part name="fault" element="tns:EmployeeAlreadyExists"/>
</message>
<message name="updateEmployee">
<part name="parameters" element="tns:updateEmployee"/>
</message>
<message name="updateEmployeeResponse">
<part name="parameters" element="tns:updateEmployeeResponse"/>
</message>
<message name="deleteEmployee">
<part name="parameters" element="tns:deleteEmployee"/>
</message>
<message name="deleteEmployeeResponse">
<part name="parameters" element="tns:deleteEmployeeResponse"/>
</message>
<message name="findEmployees">
<part name="parameters" element="tns:findEmployees"/>
</message>
<message name="findEmployeesResponse">
<part name="parameters" element="tns:findEmployeesResponse"/>
</message>
<message name="SOAPException">
<part name="fault" element="tns:SOAPException"/>
</message>
<portType name="EmployeeService">
<operation name="getEmployee">
<input wsam:Action="http://employee.ws.ca.com.tr/EmployeeService/getEmployeeRequest" message="tns:getEmployee"/>
<output wsam:Action="http://employee.ws.ca.com.tr/EmployeeService/getEmployeeResponse" message="tns:getEmployeeResponse"/>
<fault message="tns:EmployeeNotFoundException" name="EmployeeNotFoundException" wsam:Action="http://employee.ws.ca.com.tr/EmployeeService/getEmployee/Fault/EmployeeNotFoundException"/>
</operation>
<operation name="getEmployees">
<input wsam:Action="http://employee.ws.ca.com.tr/EmployeeService/getEmployeesRequest" message="tns:getEmployees"/>
<output wsam:Action="http://employee.ws.ca.com.tr/EmployeeService/getEmployeesResponse" message="tns:getEmployeesResponse"/>
</operation>
<operation name="addEmployee">
<input wsam:Action="http://employee.ws.ca.com.tr/EmployeeService/addEmployeeRequest" message="tns:addEmployee"/>
<output wsam:Action="http://employee.ws.ca.com.tr/EmployeeService/addEmployeeResponse" message="tns:addEmployeeResponse"/>
<fault message="tns:EmployeeAlreadyExistsException" name="EmployeeAlreadyExistsException" wsam:Action="http://employee.ws.ca.com.tr/EmployeeService/addEmployee/Fault/EmployeeAlreadyExistsException"/>
</operation>
<operation name="updateEmployee">
<input wsam:Action="http://employee.ws.ca.com.tr/EmployeeService/updateEmployeeRequest" message="tns:updateEmployee"/>
<output wsam:Action="http://employee.ws.ca.com.tr/EmployeeService/updateEmployeeResponse" message="tns:updateEmployeeResponse"/>
<fault message="tns:EmployeeNotFoundException" name="EmployeeNotFoundException" wsam:Action="http://employee.ws.ca.com.tr/EmployeeService/updateEmployee/Fault/EmployeeNotFoundException"/>
</operation>
<operation name="deleteEmployee">
<input wsam:Action="http://employee.ws.ca.com.tr/EmployeeService/deleteEmployeeRequest" message="tns:deleteEmployee"/>
<output wsam:Action="http://employee.ws.ca.com.tr/EmployeeService/deleteEmployeeResponse" message="tns:deleteEmployeeResponse"/>
<fault message="tns:EmployeeNotFoundException" name="EmployeeNotFoundException" wsam:Action="http://employee.ws.ca.com.tr/EmployeeService/deleteEmployee/Fault/EmployeeNotFoundException"/>
</operation>
<operation name="findEmployees">
<input wsam:Action="http://employee.ws.ca.com.tr/EmployeeService/findEmployeesRequest" message="tns:findEmployees"/>
<output wsam:Action="http://employee.ws.ca.com.tr/EmployeeService/findEmployeesResponse" message="tns:findEmployeesResponse"/>
<fault message="tns:SOAPException" name="SOAPException" wsam:Action="http://employee.ws.ca.com.tr/EmployeeService/findEmployees/Fault/SOAPException"/>
</operation>
</portType>
<binding name="EmployeePortBinding" type="tns:EmployeeService">
<soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
<operation name="getEmployee">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="EmployeeNotFoundException">
<soap:fault name="EmployeeNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="getEmployees">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="addEmployee">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="EmployeeAlreadyExistsException">
<soap:fault name="EmployeeAlreadyExistsException" use="literal"/>
</fault>
</operation>
<operation name="updateEmployee">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="EmployeeNotFoundException">
<soap:fault name="EmployeeNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="deleteEmployee">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="EmployeeNotFoundException">
<soap:fault name="EmployeeNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="findEmployees">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="SOAPException">
<soap:fault name="SOAPException" use="literal"/>
</fault>
</operation>
</binding>
<service name="EmployeeService">
<port name="EmployeePort" binding="tns:EmployeePortBinding">
<soap:address location="http://localhost:8080/JaxWsBottomUp/EmployeeService"/>
</port>
</service>
</definitions>